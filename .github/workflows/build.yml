name: build

on:
  #schedule:
  #  - cron: '10 0 * * MON'
    
  workflow_dispatch:   

jobs:
  build:
    runs-on: macos-12
    env:
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1 
      CC: clang
      CXX: clang++ 
    steps:                  
      - name: Install dependencies
        run: |
          brew update          
          brew install brotli giflib imath jpeg libpng openexr webp
          brew install little-cms2
          brew install zlib 
          brew install libass --HEAD
          brew install luajit-openresty
          brew install libarchive
          brew install libcaca
          brew install mujs
          brew install meson          
          brew install uchardet 
          brew install vapoursynth    
          brew install --only-dependencies ffmpeg
          brew uninstall --ignore-dependencies jpeg-xl
          brew uninstall --ignore-dependencies aom

      - name: Install libjxl
        run: |    
          git clone https://github.com/libjxl/libjxl.git --branch main --depth 1
          pushd libjxl 
          git submodule update --init --recursive --depth 1 --recommend-shallow third_party/{highway,skcms}
          cmake -B build -S . \
            -DCMAKE_INSTALL_PREFIX=/usr/local \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_NAME_DIR=${CMAKE_INSTALL_PREFIX}/lib \
            -DBUILD_TESTING=OFF -DJPEGXL_EMSCRIPTEN=OFF \
            -DJPEGXL_BUNDLE_LIBPNG=OFF \
            -DJPEGXL_ENABLE_TOOLS=OFF \
            -DJPEGXL_ENABLE_VIEWERS=OFF \
            -DJPEGXL_ENABLE_DOXYGEN=OFF \
            -DJPEGXL_ENABLE_EXAMPLES=OFF \
            -DJPEGXL_ENABLE_MANPAGES=OFF \
            -DJPEGXL_ENABLE_JNI=OFF \
            -DJPEGXL_ENABLE_PLUGINS=OFF \
            -DJPEGXL_ENABLE_DEVTOOLS=OFF \
            -DJPEGXL_ENABLE_BENCHMARK=OFF \
            -DJPEGXL_ENABLE_SJPEG=OFF \
            -DJPEGXL_FORCE_SYSTEM_BROTLI=ON  
          cmake --build ./build -j3 
          cmake --install ./build 
          popd
          rm -rf libjxl 

      - name: Install ffmpeg
        run: | 
          git clone https://github.com/FFmpeg/FFmpeg.git --branch master --depth 1
          pushd FFmpeg
          ./configure --prefix=/usr/local --enable-shared --cc=clang --host-cflags= --host-ldflags= --enable-gpl \
            --enable-libdav1d \
            --enable-libmp3lame \
            --enable-libopus \
            --enable-libsnappy \
            --enable-libtheora \
            --enable-libvorbis \
            --enable-libvpx \
            --enable-libx264 \
            --enable-libx265 \
            --enable-libfontconfig \
            --enable-libfreetype \
            --enable-frei0r \
            --enable-libass \
            --enable-libjxl  \
            --enable-opencl \
            --enable-audiotoolbox \
            --enable-videotoolbox \
            --disable-htmlpages \
            --enable-libbluray \
            --enable-libcaca \
            --enable-librubberband \
            --enable-libwebp \
            --enable-libxvid \
            --enable-libzimg
          make -j3
          make install
          popd 
          rm -rf FFmpeg
              
      - name: Checkout mpv-player/mpv
        uses: actions/checkout@v3
        with:
          repository: "mpv-player/mpv"
          fetch-depth: 0

      - name: Get mpv-player/mpv last version
        id: version
        run: echo "::set-output name=version::$(sh version.sh)"
        
      - name: Get mpv-player/mpv last commit SHA      
        id: sha
        run: echo "::set-output name=sha::$(git log -n1 --format="%h")" 
      
      - name: Build mpv
        run: |
          export PKG_CONFIG_PATH=`brew --prefix zlib`/lib/pkgconfig/:$PKG_CONFIG_PATH
          export PKG_CONFIG_PATH=`brew --prefix luajit-openresty`/lib/pkgconfig/:$PKG_CONFIG_PATH
          export PKG_CONFIG_PATH=`brew --prefix libarchive`/lib/pkgconfig/:$PKG_CONFIG_PATH
          meson build
          meson compile -C build
        env:
          CFLAGS: -mmacosx-version-min=10.8

      - name: Bundle mpv
        run: |
          install_name_tool -change "@loader_path/libbrotlicommon.1.dylib" "$(brew --prefix)/lib/libbrotlicommon.1.dylib" "$(brew --prefix)/lib/libbrotlidec.1.dylib"
          install_name_tool -change "@loader_path/libbrotlicommon.1.dylib" "$(brew --prefix)/lib/libbrotlicommon.1.dylib" "$(brew --prefix)/lib/libbrotlienc.1.dylib"
          TOOLS/osxbundle.py build/mpv 
      - name: Get current timestamp      
        id: timestamp
        run: echo "::set-output name=date::$(date +%Y-%m-%d)"

      - name: Package 
        run: |
          mkdir All-in-One
          curl -OL https://github.com/eko5624/mpv-config/archive/refs/heads/main.zip
          unzip main.zip
          mv mpv-config-main/macos_config All-in-One
          mv build/mpv.app All-in-One 
          zip -r All-in-One-${{ steps.timestamp.outputs.date }}.zip All-in-One      
      - name: Create Release      
        uses: softprops/action-gh-release@v1
        with:
          tag_name: mpv-${{ steps.version.outputs.version }}
          name: ${{ steps.timestamp.outputs.date }}
          body: Bump to mpv-player/mpv@${{ steps.sha.outputs.sha }}
          files: All*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
