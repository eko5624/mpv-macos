name: build

on:
  #schedule:
  #  - cron: '10 0 * * MON'
    
  workflow_dispatch:   

jobs:
  build:
    runs-on: macos-11
    env:
      CC: clang
      CXX: clang++
      MACOSX_DEPLOYMENT_TARGET: 10.11
      SDKROOT: "/Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
      MACOS_SDK: "/Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
      SDK_PATH: "/Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs"
      EXTRA_CFLAGS: "-mmacosx-version-min=10.11 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
      EXTRA_CXXFLAGS: "-mmacosx-version-min=10.11 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
      EXTRA_LDFLAGS: "-mmacosx-version-min=10.11 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
      SWIFT_FLAGS: "-target x86_64-apple-macosx10.11"
      SWIFT_PATH: "/Library/Developer/Toolchains/swift-latest.xctoolchain"
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"
    steps:
    
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Switch to MacOSX 10.11 SDK
      id: macossdk1011
      run: |
        # MacOSX10.11 SDK
        curl -OL https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.11.sdk.tar.xz
        tar -C $SDK_PATH -xf MacOSX10.11.sdk.tar.xz
        sudo rm -rf $SDK_PATH/MacOSX11.3.sdk
        sudo rm -rf $SDK_PATH/MacOSX.sdk
        sudo ln -s $SDK_PATH/MacOSX10.11.sdk $SDK_PATH/MacOSX.sdk
        sudo /usr/libexec/PlistBuddy -c "Set :MinimumSDKVersion 10.11" /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Info.plist

    - name: Install Swift 4.x toolchain
      id: swift4
      run: |
        # Swift 4.x toolchain
        curl -ksJLO https://download.swift.org/swift-4.2.4-release/xcode/swift-4.2.4-RELEASE/swift-4.2.4-RELEASE-osx.pkg
        sudo installer -pkg swift-4.2.4-RELEASE-osx.pkg -target /

    - name: Switch to Xcode 12.5.1
      id: xcode1251
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_12.5.1.app/Contents/Developer  
 
    - name: Remove stray upstream python binary symlinks under /usr/local
      run: |
        find /usr/local/bin -lname '*/Library/Frameworks/Python.framework/*' -delete -print
        brew unlink python

    #- name: Switch to CLTs
    #  run: |
    #    sudo xcode-select --reset
    #    sudo xcode-select --switch /Library/Developer/CommandLineTools/

    - name: Install binary packages
      continue-on-error: true
      run: |
       curl -OL https://github.com/${{ github.repository }}/releases/download/binary-packages/workspace-dir.zip
       curl -OL https://github.com/${{ github.repository }}/releases/download/binary-packages/packages-dir.zip
       unzip workspace-dir.zip
       unzip packages-dir.zip
       rm packages/mpv.done || true
       rm -rf packages/mpv || true
       rm workspace-dir.zip packages-dir.zip
       
    - name: build
      continue-on-error: true
      run: |
        chmod +x ./build.sh
        ./build.sh

    - name: Zip binary packages 
      continue-on-error: true
      run: |
        rm -rf workspace/doc
        rm -rf workspace/etc
        rm -rf workspace/man
        rm -rf workspace/var
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftAVFoundation.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftAppKit.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftCore.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftCoreAudio.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftCoreData.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftCoreFoundation.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftCoreGraphics.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftCoreImage.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftCoreMedia.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftDarwin.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftDispatch.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftFoundation.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftIOKit.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftMetal.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftObjectiveC.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftQuartzCore.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftXPC.dylib workspace/lib || true
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftos.dylib workspace/lib || true        
        sudo cp $SWIFT_PATH/usr/lib/swift/macosx/libswiftsimd.dylib workspace/lib || true
        zip -r -y workspace-dir.zip workspace/
        mkdir packages2
        mv packages/mpv packages2 || true
        mv packages/*.done packages2
        rm -rf packages
        mv packages2 packages
        zip -r packages-dir.zip packages/
        
    - name: Upload binary packages
      continue-on-error: true
      uses: softprops/action-gh-release@master
      with:
        tag_name: binary-packages
        name: binary-packages
        files: |
          workspace-dir.zip
          packages-dir.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get current timestamp
      run: echo "date=$(date +%Y-%m-%d)" >> $GITHUB_ENV        

    - name: Zip mpv.app
      run: |
        mkdir All-in-One
        curl -OL https://github.com/eko5624/mpv-config/archive/refs/heads/main.zip
        unzip main.zip
        mv mpv-config-main/macos_config All-in-One
        mv packages/mpv/build/mpv.app All-in-One
        zip -r All-in-One-${{ env.date }}.zip All-in-One/*

    - name: Create Release
      uses: softprops/action-gh-release@master
      with:
        tag_name: ${{ env.date }}
        name: ${{ env.date }}
        body: Bump to mpv-player/mpv@${{ env.sha }}
        files: All*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
