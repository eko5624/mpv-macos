name: build

on:
  #schedule:
  #  - cron: '10 0 * * MON'
    
  workflow_dispatch:   

jobs:
  build:
    runs-on: macos-12
    env:
      HOMEBREW_NO_ANALYTICS: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1 
      CC: clang
      CXX: clang++ 
    steps:
      - name: Install dependencies
        run: |
          brew update
          brew install --overwrite python@3.11 meson
          brew install --overwrite glslang libarchive little-cms2 luajit-openresty mujs uchardet
          brew install --overwrite libass --HEAD          
          ffmpeg_deps=(
            dav1d
            fontconfig
            freetype
            frei0r
            gnutls
            jpeg-xl
            lame
            libbluray
            libbs2b
            libcaca
            libmodplug
            librist
            libsoxr
            libssh
            libvidstab
            libvorbis
            libvpx
            opencore-amr
            openjpeg
            openssl@1.1
            opus
            rav1e
            rubberband
            sdl2
            snappy
            speex
            srt
            tesseract
            theora
            webp
            xvid
            xz
            zeromq
            zimg            
          )  
          for dep in "${ffmpeg_deps[@]}"; do
              brew install --overwrite $dep;
          done

      - name: Install libzvbi
        run: |
          git clone https://github.com/zapping-vbi/zvbi
          pushd zvbi
          curl -OL https://raw.githubusercontent.com/videolan/vlc/master/contrib/src/zvbi/zvbi-fix-clang-support.patch
          curl -OL https://raw.githubusercontent.com/videolan/vlc/master/contrib/src/zvbi/zvbi-ioctl.patch
          curl -OL https://raw.githubusercontent.com/videolan/vlc/master/contrib/src/zvbi/zvbi-ssize_max.patch
          for patch in ./*.patch; do
              echo "Applying $patch"
              patch -p1 < "$patch"
          done
          ./autogen.sh
          ./configure --prefix=/usr/local \
            --disable-dependency-tracking \
            --disable-silent-rules \
            --without-x
          make -C src
          make -C src install
          make SUBDIRS=. install
          popd
          rm -rf zvbi

      - name: Install libmysofa
        run: |
          git clone https://github.com/hoene/libmysofa.git
          pushd libmysofa
          cmake -B build -S . \
            -DCMAKE_INSTALL_PREFIX=/usr/local \
            -DCMAKE_INSTALL_NAME_DIR=/usr/local/lib \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_TESTS=OFF
          make -C build all
          make -C build install
          popd
          rm -rf libmysofa
          
      - name: Install davs2
        run: |    
          git clone https://github.com/pkuvcl/davs2.git --branch master --depth 1
          pushd davs2/build/linux
          ./configure \
            --prefix=/usr/local \
            --enable-shared \
            --disable-static \
            --disable-cli \
            --enable-lto \
            --enable-pic
          make -j3
          make install
          popd 
          rm -rf davs2
          
      - name: Install uavs3d
        run: |    
          git clone https://github.com/uavs3/uavs3d.git --branch master --depth 1
          pushd uavs3d
          mkdir -p build/linux && cd build/linux
          cmake ../.. \
            -DCMAKE_INSTALL_PREFIX=/usr/local \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_NAME_DIR=/usr/local/lib \
            -DBUILD_SHARED_LIBS=ON \
            -DCOMPILE_10BIT=ON
          cmake --build . -j3
          cmake --install .
          popd
          rm -rf uavs3d

      - name: Install libjxl
        run: |
          git clone https://github.com/libjxl/libjxl.git --branch main --depth 1
          pushd libjxl
          git submodule update --init --recursive --depth 1 --recommend-shallow third_party/{highway,skcms}
          cmake -B build -S . \
            -DCMAKE_INSTALL_PREFIX=/usr/local \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_NAME_DIR=/usr/local/lib \
            -DBUILD_TESTING=OFF \
            -DJPEGXL_EMSCRIPTEN=OFF \
            -DJPEGXL_BUNDLE_LIBPNG=OFF \
            -DJPEGXL_ENABLE_TOOLS=OFF \
            -DJPEGXL_ENABLE_VIEWERS=OFF \
            -DJPEGXL_ENABLE_DOXYGEN=OFF \
            -DJPEGXL_ENABLE_EXAMPLES=OFF \
            -DJPEGXL_ENABLE_MANPAGES=OFF \
            -DJPEGXL_ENABLE_JNI=OFF \
            -DJPEGXL_ENABLE_PLUGINS=OFF \
            -DJPEGXL_ENABLE_DEVTOOLS=OFF \
            -DJPEGXL_ENABLE_BENCHMARK=OFF \
            -DJPEGXL_ENABLE_SJPEG=OFF \
            -DJPEGXL_FORCE_SYSTEM_BROTLI=ON
          cmake --build ./build -j3
          cmake --install ./build
          popd
          rm -rf libjxl

      - name: Install libplacebo
        run: |    
          git clone --recursive https://code.videolan.org/videolan/libplacebo
          pushd libplacebo
          meson setup build --prefix=/usr/local --buildtype=release \
            -Dvulkan=disabled
          meson compile -C build
          meson install -C build
          popd
          rm -rf libplacebo

      - name: Install ffmpeg
        run: | 
          git clone https://github.com/FFmpeg/FFmpeg.git --branch master --depth 1                  
          pushd FFmpeg
          # Fix srt >= 1.3.0 not found when configure
          export LDFLAGS="-L/usr/local/opt/openssl@1.1/lib"
          export CPPFLAGS="-I/usr/local/opt/openssl@1.1/include"
          export PKG_CONFIG_PATH=/usr/local/opt/openssl@1.1/lib/pkgconfig
          ./configure \
            --prefix=/usr/local \
            --enable-gpl \
            --enable-nonfree \
            --enable-version3 \
            --enable-pthreads \
            --enable-shared \
            --cc=clang \
            --host-cflags= \
            --host-ldflags= \
            --enable-frei0r \
            --enable-libbs2b \
            --enable-libbluray \
            --enable-libcaca \
            --enable-libdav1d \
            --enable-libdavs2 \
            --enable-libfontconfig \
            --enable-libfreetype \
            --enable-libjxl \
            --enable-libmodplug \
            --enable-libmp3lame \
            --enable-libmysofa \
            --enable-libopus \
            --enable-librubberband \
            --enable-libsnappy \
            --enable-libsoxr \
            --enable-libspeex \
            --enable-librist \
            --enable-libsrt \
            --enable-libssh \
            --enable-libtheora \
            --enable-libuavs3d \
            --enable-libvorbis \
            --enable-libvpx \
            --enable-libwebp \
            --enable-libxml2 \
            --enable-libxvid \
            --enable-libzimg \
            --enable-libzvbi \
            --enable-opencl \
            --enable-openssl \
            --enable-audiotoolbox \
            --enable-videotoolbox \
            --disable-htmlpages
          make -j3
          make install
          popd
          rm -rf FFmpeg
              
      - name: Checkout mpv-player/mpv
        uses: actions/checkout@main
        with:
          repository: "mpv-player/mpv"
          fetch-depth: 0

      - name: Get mpv-player/mpv last version
        id: version
        run: echo "version=$(sh version.sh)" >> $GITHUB_ENV
        
      - name: Get mpv-player/mpv last commit SHA      
        id: sha
        run: echo "sha=$(git log -n1 --format="%h")" >> $GITHUB_ENV 
      
      - name: Build mpv
        run: |
          export PKG_CONFIG_PATH=`brew --prefix zlib`/lib/pkgconfig/:$PKG_CONFIG_PATH
          export PKG_CONFIG_PATH=`brew --prefix luajit-openresty`/lib/pkgconfig/:$PKG_CONFIG_PATH
          export PKG_CONFIG_PATH=`brew --prefix libarchive`/lib/pkgconfig/:$PKG_CONFIG_PATH
          meson setup build
          meson compile -C build

      - name: Bundle mpv
        run: |
          install_name_tool -change "@loader_path/libbrotlicommon.1.dylib" "$(brew --prefix)/lib/libbrotlicommon.1.dylib" "$(brew --prefix)/lib/libbrotlidec.1.dylib"
          install_name_tool -change "@loader_path/libbrotlicommon.1.dylib" "$(brew --prefix)/lib/libbrotlicommon.1.dylib" "$(brew --prefix)/lib/libbrotlienc.1.dylib"
          TOOLS/osxbundle.py build/mpv
      - name: Get current timestamp
        id: timestamp
        run: echo "date=$(date +%Y-%m-%d)" >> $GITHUB_ENV

      - name: Package
        run: |
          mkdir All-in-One
          curl -OL https://github.com/eko5624/mpv-config/archive/refs/heads/main.zip
          unzip main.zip
          mv mpv-config-main/macos_config All-in-One
          mv build/mpv.app All-in-One
          zip -r All-in-One-${{ env.date }}.zip All-in-One
      - name: Create Release
        uses: softprops/action-gh-release@master
        with:
          tag_name: ${{ env.date }}
          name: ${{ env.date }}
          body: Bump to mpv-player/mpv@${{ env.sha }}
          files: All*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
